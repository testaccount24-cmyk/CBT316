*          DATA SET ADPTIDYASM AT LEVEL 007 AS OF 03/12/81
         TITLE 'TIDYASM MARGINS AND ORGANIZE ASSEMBLER CODE'            00001
*********************************************************************   00002
*                                                                       00003
*        THIS ROUTINE WILL READ AN ASSEMBLER SOURCE FILE                00004
*        AND REPOSITION EACH SECTION OF EACH RECORD TO                  00005
*        STANDARD ASSEMBLER SOURCE MARGINS (1 10 16).                   00006
*        BOTH SOURCE AS WELL AS MACROS (IMBEDDED TOO) CAN               00007
*        BE HANDLED WITHIN THE SAME EXECUTION.                          00008
*        QUOTED STRINGS ARE HANDLED BUT MUST BE PAIRED.                 00009
*        PARM VALUES MAY BE USED TO OVERRIDE THE DEFAULT                00010
*        OF 31 AND 71 AS SPECIFICATION OF COMMENTS BOUNDARIES.          00011
*                                                                       00012
*        REQUIREMENTS:                                                  00013
*              SYSPRINT - LISTING DDNAME                                00014
*              SYSIN    - INPUT SOURCE FILE                             00015
*              SYSPUNCH - OUTPUT SOURCE FILE                            00016
*                                                                       00017
*        PARM VALUES IF ANY MUST BE SPECIFIED AS FOLLOWS:               00018
*              PARM='BB,EE' (DEFAULT = '31,71')                         00019
*              BB - BEGINNING COLUMN FOR COMMENTS                       00020
*              EE - ENDING COLUMN FOR COMMENTS                          00021
*                                                                       00022
*        TRUNCATION OF COMMENTS IS HANDLED BY ADDING A CONTINUATION     00023
*        'COMMENTS' CARD.                                               00024
*                                                                       00025
* NOTE: IT HAS BEEN NOTICED BY ME THAT IF THE ALC CODE IS TOO MESSED    00025
*       UP, THEN THE PROGRAM WILL GO INTO A LOOP. ALSO IF YOU HAVE      00025
*       LITERALS DEFINED LIKE  =C'XXX' AS THE FIRST OPERAND, YOU WILL   00025
*       GO INTO A LOOP. SO PUT A VERY SMALL TIME ON YOUR JOB CARD       00025
*       JUST IN CASE. WILL TRY TO INVESTIGATE WHEN I GET SOME FREE      00025
*       TIME.     JIM MARSHALL,AFDSC/CMIS,WASHINGTON DC                 00025
*                                                                       00025
*********************************************************************   00026
*                                                                       00027
*        THE FOLLOWING IS AN EXAMPLE OF IT'S USE AS A TSO COMMAND       00028
*        VIA CALL WITHIN A CLIST.  TWO SECTIONS FOLLOW, FIRST           00029
*        THE INFORMATION TO BE INCLUDED WITHIN THE HELP DATASET,        00030
*        AND SECOND THE CLIST ITSELF.                                   00031
*                                                                       00032
*  )F FUNCTION                                                          00033
*     THE JUSTASM CLIST INVOKES 'TIDYASM' TO REALIGN ASSEMBLER          00034
*     SOURCE FILES. EACH FIELD FOR EACH STATEMENT IS ALIGNED            00035
*     TO THE CORRECT COLUMN (1 10 16 31 72 ETC.).                       00036
*  )X SYNTAX -                                                          00037
*         JUSTASM DATASET-NAME                                          00038
*     REQUIRED  DATASET-NAME                                            00039
*     DEFAULTS  NONE                                                    00040
*  )O OPERANDS -                                                        00041
*     DATASET-NAME                                                      00042
*             - UNQUALIFIED DATA SET NAME OF THE FILE TO BE             00043
*               JUSTIFIED.  THE REAL NAME MUST HAVE A SUFFIX            00044
*               OF 'ASM' AND A PREFIX OF YOUR USER-ID.                  00045
*               EXAMPLE: TO JUSTASM A FILE NAMED                        00046
*                        USERID.MYASM.ASM                               00047
*                        ENTER 'JUSTASM MYASM'                          00048
*                                                                       00049
*                                                                       00050
*********************************************************************   00051
*                                                                       00052
*  PROC 1 DSN                                                           00053
*  FREE F(SYSIN SYSPRINT SYSPUNCH)                                      00054
*  ATTRIB TIDYASM LRECL(80) BLKSIZE(400) RECFM(F B)                     00055
*  ALLOC F(SYSIN) DA(&DSN..ASM) SHR                                     00056
*  ALLOC F(SYSPUNCH) DA(NEW.&DSN..ASM) NE SP(1 5) TR US(TIDYASM) REL    00057
*  ALLOC F(SYSPRINT) DUMMY                                              00058
*  CALL 'USER.LINKLIB(TIDYASM)' '31,71'                                 00059
*  FREE ATTR(TIDYASM)                                                   00060
*  FREE F(SYSPUNCH SYSIN SYSPRINT)                                      00061
*  ALLOC F(SYSPRINT) DA(*)                                              00062
*  ALLOC F(SYSIN) DA(*)                                                 00063
*  DELETE &DSN..ASM                                                     00064
*  REN NEW.&DSN..ASM &DSN..ASM                                          00065
*********************************************************************   00066
TIDYASM  CSECT                                                          00067
*                                                                       00068
*        EQUATES                                                        00069
*                                                                       00070
BASE1    EQU   11                                                       00071
BASE2    EQU   12                                                       00072
R0       EQU   0                                                        00073
R1       EQU   1                                                        00074
R2       EQU   2                                                        00075
R3       EQU   3                                                        00076
R4       EQU   4                                                        00077
R5       EQU   5                                                        00078
R6       EQU   6                                                        00079
R7       EQU   7                                                        00080
R8       EQU   8                                                        00081
R9       EQU   9                                                        00082
R10      EQU   10                                                       00083
R13      EQU   13                                                       00084
R14      EQU   14                                                       00085
R15      EQU   15                                                       00086
*                                                                       00087
CC       EQU   X'80'                                                    00088
EF       EQU   X'40'                                                    00089
MAC      EQU   X'20'                                                    00090
AIF      EQU   X'10'                                                    00091
SI       EQU   X'08'                                                    00092
LC       EQU   X'04'                                                    00093
GC       EQU   X'02'                                                    00094
CR       EQU   X'01'                                                    00095
ALLBITS  EQU   X'FF'                                                    00096
HIT      EQU   7                                                        00097
NOHIT    EQU   8                                                        00098
*                                                                       00099
*   REGISTER ASSIGNMENTS                                                00100
*     0 - WORK                                                          00101
*     1 - LENGTH OF TEXT - 1                                            00102
*     2 - WORK                                                          00103
*     3 - WORK                                                          00104
*     4 - WORK                                                          00105
*     5 - POINTER TO INPUT AREA                                         00106
*     6 - POINTER TO DELIMITING BLANK AFTER TEXT                        00107
*     7 - POINTER TO TEXT IN INPUT AREA                                 00108
*     8 - POINTER TO OUTPUT AREA                                        00109
*     9 - POINTER TO DESTNATION OF TEXT IN OUTPUT AREA                  00110
*    10 - INTERNAL LINKAGE REGISTER                                     00111
*    11 - BASE REGISTER 1                                               00112
*    12 - BASE REGISTER 2                                               00113
*    13 - SAVE AREA POINTER                                             00114
*    14 - WORK                                                          00115
*    15 - WORK                                                          00116
*                                                                       00117
         EJECT                                                          00118
         PRINT NOGEN                                                    00119
*********************************************************************** 00120
*                                                                     * 00121
*        PROCESS PARM INFORMATION IF ANY.  IF CMS DEFAULT TO          * 00122
*        COMMENTS START = COL 36 (PARM1) AND COMMENTS STOP =          * 00123
*        COL 71 (PARM2).  CHECK FOR CMS ENVIRONMENT BY LOOKING        * 00124
*        FOR THE FENCE THAT REGISTER ONE POINTS TO WHEN NO            * 00125
*        PARMS ARE ENTERED IN CMS. (RESTRICTION)                      * 00126
*                                                                     * 00127
*********************************************************************** 00128
         SAVE  (14,12)             SAVE CALLERS REGS                    00129
         LR    BASE1,R15           GET ENTRY FOR BASE                   00130
         USING TIDYASM,BASE1       TELL ASSEMBLER                       00131
         CNOP  0,4                 ALIGNMENT FOR SAVE AREA              00132
         BAL   R2,*+76             AROUND SAVE AREA                     00133
         DC    18F'0'              SAVE AREA                            00134
         ST    R2,8(R13)           SAVE FORWARD POINTER                 00135
         ST    R13,4(R2)           SAVE BACKWARD POINTER                00136
         LR    R13,R2              SET UP SAVE REG                      00137
         L     BASE2,ADCON         GET SECOND BASE REG                  00138
         USING TIDYASM+4096,BASE2  TELL ASSEMBLER                       00139
         B     BEGIN               GO TO INITIALIZATION ROUTINE         00140
ADCON    DC    A(TIDYASM+4096)                                          00141
BEGIN    LA    R5,36               SET DEFAULT COMM START               00142
         LA    R7,71               SET DEFAULT COMM STOP                00143
         CLC   0(8,R1),=CL8'TIDYASM'  IS THIS CMS ENVIRONMENT?          00144
         BE    PARMCMS             YES, PROCESS CMS PARMS               00145
         CLI   0(R1),C'*'          IS THIS CMS TEST?                    00146
         BNE   PARMOS              NO, MUST BE OS                       00147
PARMCMS  CLC   8(4,R1),=F'-1'      NULL PARM?                           00148
         BE    NOPARM              YES, DEFAULT                         00149
         LA    R5,6                SET LOOP LIMIT                       00150
         LA    R3,8(R1)            SET DATA POINTER                     00151
         SR    R2,R2               CLEAR COUNT REG                      00152
PARMCMSA CLI   0(R3),C' '          BLANK?                               00153
         BE    PARMCMSD            YES, DONE                            00154
         LA    R3,1(R3)            BUMP TO NEXT CHAR                    00155
         LA    R2,1(R2)            BUMP COUNT                           00156
         BCT   R5,PARMCMSA         CHECK NEXT CHAR                      00157
         B     PARMERR             GREATER THAN 5, ERROR                00158
PARMCMSD LR    R0,R2               SAVE COUNT FOR LATER                 00159
         LA    R1,6(R1)            UPDATE TO SIMULATE OS PARM           00160
         B     PARMSAME            CONTINUE PARM SCAN                   00161
PARMOS   L     R1,0(R1)            GET PARM POINTER                     00162
         LH    R2,0(R1)            GET PARM SIZE                        00163
         LR    R0,R2               COPY TO HOLDING REG                  00164
PARMSAME LTR   R2,R2               ANY PARM GIVEN?                      00165
         BZ    NOPARM              NO, DEFAULT                          00166
         LA    R3,2(R1)            POINT TO DATA PORTION OF PARM        00167
         LR    R4,R3               SAVE FOR MOVE                        00168
PARM1CHK CLI   0(R3),C','          END OF PARM 1                        00169
         BE    PARM1END            YES, CHECK IF NAY GIVEN              00170
         LA    R3,1(R3)            BUMP TO NEXT POS'N                   00171
         BCT   R2,PARM1CHK         CHECK NEXT CHARACTER                 00172
PARM1END LR    R5,R0               GET ORIGINAL SIZE                    00173
         SR    R5,R2               GET NUMBER SCANNED                   00174
         CH    R5,=H'2'            WITHIN LIMITS?                       00175
         BH    PARMERR             NO, ERROR                            00176
         LTR   R5,R5               CHECK IF 1ST PARM GIVEN              00177
         BZ    PARM2CHK            NONE, SKIP IT (DEFAULT)              00178
         LA    R14,PARMWORK+8      SET DATA POINTER FOR EXECUTE         00179
         SR    R14,R5              DECREMENT BY NUMBER TO MOVE          00180
         BCTR  R5,R0               DECREMENT FOR EXECUTE                00181
         EX    R5,PARMMOVE         MOVE TO WORK AREA                    00182
         XC    WORK,WORK           CLEAR WORK AREA                      00183
         MVZ   WORK,PARMWORK       MOVE FOR ZONE CHECK                  00184
         CLC   WORK,ZEROS          WAS PARM NUMERIC?                    00185
         BNE   PARMERR             NO, ERROR                            00186
         PACK  WORK(8),PARMWORK(8)  MAKE DECIMAL FIRST                  00187
         CVB   R5,WORK             CONVERT TO HEX                       00188
PARM2CHK LA    R3,1(R3)            BUMP TO NEXT CHAR                    00189
         LR    R4,R3               SAVE FOR MOVE                        00190
         BCTR  R2,R0               DECREMENT PARM SIZE                  00191
         MVC   PARMWORK,ZEROS      CLEAR WORK AREA                      00192
         LA    R14,PARMWORK+8      SET DATA POINTER FOR MOVE            00193
         SR    R14,R2              DECREMENT BY NUMBER LEFT TO MOVE     00194
         BCTR  R2,R0               DECREMENT FY NUMBER LEFT             00195
         EX    R2,PARMMOVE         MOVE TO WORK AREA                    00196
         XC    WORK,WORK           CLEAR WORK AREA                      00197
         MVZ   WORK,PARMWORK       MOVE ZONES FOR CHECK                 00198
         CLC   WORK,ZEROS          ALL NUMERICS?                        00199
         BNE   PARMERR             NO, ERROR                            00200
         PACK  WORK(8),PARMWORK(8)  MAKE DECIMAL FIRST                  00201
         CVB   R7,WORK             MAKE HEX                             00202
NOPARM   ST    R5,COMMSTRT         SET COMMENT START FIELD              00203
         ST    R7,LIMIT            SET COMMENT STOP FIELD               00204
         CH    R5,=H'60'           WITHIN LIMITS?                       00205
         BH    PARMERR             NO, ERROR                            00206
         CH    R7,=H'71'           WITHIN LIMIT?                        00207
         BH    PARMERR             NO, ERROR TOO                        00208
         SR    R7,R5               GET COMMENTS SIZE                    00209
         STH   R7,LIMITSZ          SAVE FOR FUTURE REF                  00210
         CH    R7,=H'16'           WITHIN LIMITS?                       00211
         BH    PARMEND             YES, CONTINUE                        00212
PARMERR  WTO   'TIDYASM - INVALID PARM SPECIFIED, RETRY'                00213
         LA    R15,20              SET RETCODE                          00214
         B     EXIT                RETURN TO CALLER                     00215
         EJECT                                                          00216
*********************************************************************** 00217
*                                                                     * 00218
*        INITIALIZE TRANSLATE TABLES AND OPEN FILES.  THEN SET UP     * 00219
*        READ AHEAD RECORD.                                           * 00220
*                                                                     * 00221
*********************************************************************** 00222
PARMEND  OC    QBTABLE,QTABLE      INITIALIZE QUOTE BLANK               00223
         OC    QBTABLE,BTABLE      TABLE WITH QUOTES AND BLANKS         00224
PRINTSET EQU   *                   SET UP TO PRINT OUTPUT               00225
         OI    FLG2,X'01'          FORCE HEADING ON FIRST CARD          00226
         OPEN  (PRINT,OUTPUT)                                           00227
OPENIO   OPEN  (INPUT,,OUTPUT,OUTPUT)                                   00228
         GET   INPUT,CURRENT       GET FIRST CARD OF INPUT              00229
         B     PASTGET             SKIP BUFFER SHIFT                    00230
GET      MVC   CURRENT(80),NEXT    MAKE LOOK AHEAD CURRENT              00231
         NI    FLG,ALLBITS-GC      RESET COMMENT CONTINUATION           00232
         TM    FLG,EF              END OF FILE ON PREVIOUS              00233
         BO    EODAD               YES, NO MORE READS                   00234
         MVC   NEXT+71(8),NINES    MOVE HIGH VALUE TO NEW SEQ           00235
PASTGET  GET   INPUT,NEXT          READ LOOK AHEAD CARD                 00236
ONCEMORE LA    R5,CURRENT          SET PERM. INPUT REC. POINTER         00237
         LR    R7,R5               COPY FOR WORKING REGISTER            00238
         LA    R8,PAREA            OUTPUT AREA                          00239
         EJECT                                                          00240
*********************************************************************** 00241
*                                                                     * 00242
*        CHECK TYPE OF RECORD JUST READ.  IF COMMENTS OR OTHER        * 00243
*        NON-PROCESS CARD, SKIP IT.                                   * 00244
*                                                                     * 00245
*********************************************************************** 00246
         CLI   0(R7),C'*'          COMMENTS CARD                        00247
         BE    CPUTA               YES, OUTPUT AS IS                    00248
         CLC   0(2,R7),=CL2'.*'    MACRO COMMENTS                       00249
         BE    CPUT                YES, OUTPUT AS IS                    00250
         TM    FLG,CC              PREVIOUS IND. CONT?                  00251
         BZ    SKIPCONT            NO, SKIP CONT. INIT.                 00252
         LA    R6,1(R7)            SET BEGINNING OF CARD                00253
         LR    R7,R6               COPY TO WORKING SET                  00254
         B     CONTINUE                                                 00255
SKIPCONT CLI   0(R7),C' '          IS LABEL PRESENT                     00256
         BE    ORCHECK             NO - FIND OPERATOR                   00257
         CLI   0(R7),C'*'          COMMENT                              00258
         BE    CPUT                YES - OUTPUT CARD AS IS              00259
         CLI   0(R7),C'/'          JCL                                  00260
         BNE   LDELIM              NO - ISOLATE LABEL                   00261
         CLI   1(R7),C'*'          /*                                   00262
         BNE   CPUT                NO - OUTPUT AS IS                    00263
         OI    FLG2,X'01'          EJECT AFTER PRINTING                 00264
         B     CPUT                OUTPUT CARD                          00265
CPUTA    CLI   71(R5),C' '         CONTINUATION IN COMMENTS             00266
         BE    CPUT                NO, BRANCH AROUND                    00267
         MVC   85(20,R8),ERR6MSG   INFORM USER                          00268
CPUT     EQU   *                   OUTPUT CARD UNCHANED                 00269
         MVC   0(80,R8),0(R5)      MOVE COMMENT OR JCL                  00270
         B     XCARD1              OUTPUT IT                            00271
         SPACE 1                                                        00272
*********************************************************************** 00273
*                                                                     * 00274
*        FIND AND PROCESS LABEL IF ONE IS PRESENT.                    * 00275
*                                                                     * 00276
*********************************************************************** 00277
LDELIM   EQU   *                   DELIMIT LABEL                        00278
         TRT   0(9,R7),BTABLE      LOOK FOR BLANK                       00279
         BC    NOHIT,ERR1          LABEL EEROR                          00280
         LR    R0,R1               SAVE ADDRESS                         00281
         SR    R1,R7               FIND L'LABEL                         00282
         BCTR  R1,R0               -1                                   00283
         EX    R1,LMOVE            MOVE TO OUTPUT                       00284
         LR    R7,R0               A(FIRST BLANK)                       00285
         EJECT                                                          00286
*********************************************************************** 00287
*                                                                     * 00288
*        FIND AND PROCESS OPERATOR.  IF A SPECIAL OPERATOR IS         * 00289
*        FOUND (MACRO TYPES)SET APPROPRIATE INDICATOR FOR COMMENT     * 00290
*        GENERATION ROUTINES.                                         * 00291
*                                                                     * 00292
*********************************************************************** 00293
ORCHECK  EQU   *                   ISOLATE OPERATOR                     00294
         LA    R1,70(R5)           POINT TO COL 71                      00295
         SR    R1,R7               NUMBER OF COLS AFTER LABEL           00296
         EX    R1,FINDNB           FIND OPERATOR                        00297
         BC    NOHIT,ERR2                                               00298
         LR    R7,R1               A(OPERATOR)                          00299
         TRT   0(9,R7),BTABLE      FIND OPERATOR END                    00300
         BC    NOHIT,ERR3                                               00301
         LR    R6,R1               END OF OPERATOR                      00302
         SR    R1,R7               L'OPERATOR                           00303
         BCTR  R1,R0               -1                                   00304
         EX    R1,ORMOVE           MOVE OPERATOR                        00305
         LR    R0,R1               SAVE LENGTH OF OPERAND               00306
         LA    R1,1(R1)            UPDATE FOR BLANK                     00307
         LA    R14,TSTBL           GET POINTER TO TABLE ORIGIN          00308
         LA    R15,R2              NUMBER OF THREE BYTE ENTRIES         00309
TRY3     EX    R1,MACOMP           COMPARE OPERATORS                    00310
         BE    MACMATCH            BRANCH IF FOUND                      00311
         LA    R14,6(R14)          UPDATE TO NEXT IN LIST               00312
         BCT   R15,TRY3            GO CHECK NEXT                        00313
         LA    R15,R8              NUMBER OF FOUR BYTE ENTRIES          00314
TRY4     EX    R1,MACOMP           COMPARE OPERATORS                    00315
         BE    MACMATCH            BRANCH IF FOUND                      00316
         LA    R14,6(R14)          UPDATE TO NEXT IN LIST               00317
         BCT   R15,TRY4            GO CHECK NEXT                        00318
         LA    R15,R10             NUMBER OF FIVE BYTE ENTRIES          00319
TRY5     EX    R1,MACOMP           COMPARE OPERATORS                    00320
         BE    MACMATCH            BRANCH IF FOUND                      00321
         LA    R14,6(R14)          UPDATE TO NEXT IN LIST               00322
         BCT   R15,TRY5            GO CHECK NEXT IN LIST                00323
         NI    FLG,ALLBITS-SI-AIF  RESET MAC CONTINUE FLAG              00324
         B     MACEND              AROUND FOLLOWING TESTS               00325
MACMATCH OI    FLG,SI              SET MACRO COMMENT FLAG               00326
         CLC   0(6,R7),MACRO       IS THIS START OF MACRO               00327
         BNE   TST2                NO, TO NEXT TEST                     00328
         OI    FLG,MAC             SET MACRO FLAG                       00329
         B     MACEND              SKIP FOLLOWING TESTS                 00330
TST2     CLC   0(5,R7),MEND        IS THIS END OF MACRO                 00331
         BNE   TST3                NO, TO NEXT TEST                     00332
         NI    FLG,ALLBITS-SI-AIF-MAC  RESET MACRO FLAGS                00333
         B     MACEND              SKIP NEXT TESTS                      00334
TST3     CLC   0(4,R7),TSTBL       CHECK FOR 'AIF' OPERATOR             00335
         BNE   MACEND              NO, OTHER OPERAND                    00336
         OI    FLG,AIF             SET 'AIF' FLAG                       00337
         EJECT                                                          00338
*********************************************************************** 00339
*                                                                     * 00340
*        CHACK FOR SPECIAL ASSEMBLER CONTROL STATEMENTS, AND IF       * 00341
*        FOUND, BRANCH TO SET SPECIAL INDICATOR IN OUTPUT.            * 00342
*                                                                     * 00343
*********************************************************************** 00344
MACEND   EQU   *                                                        00345
         CLC   0(6,R7),=CL6'EJECT'  CONTROL OPERATOR                    00346
         BE    ERR5                YES, AS IS                           00347
         CLC   0(6,R7),=CL6'SPACE'  CONTROL OPERATOR                    00348
         BE    ERR5                YES, AS IS                           00349
         LR    R1,R0               RESTORE OPERATOR LENGTH              00350
         LR    R7,R6               POINT TO END OF OPERATOR             00351
         SPACE 2                                                        00352
*********************************************************************** 00353
*                                                                     * 00354
*        DETERMINE BEGINNING OF OPERAND ADDRESS BASED ON SIZE OF      * 00355
*        OPERATOR.                                                    * 00356
*                                                                     * 00357
*********************************************************************** 00358
         C     R1,=F'4'            5-BYTE OPERATOR OR LESS              00359
         BH    *+12                NO                                   00360
CONTINUE LA    R9,15(R8)           A(DESTNATION)                        00361
         B     ODLOC               BRANCH TO CONTINUE                   00362
         C     R1,=F'6'            7-BYTE OPERATOR                      00363
         BH    *+12                NO                                   00364
         LA    R9,17(R8)           A(DESTNATION)                        00365
         B     ODLOC               BRANCH TO CONTINUE                   00366
         LA    R9,19(R8)           A(DSTINATION)                        00367
ODLOC    EQU   *                   FIND OPERAND                         00368
         LA    R1,70(R5)           A(COL 71)                            00369
         SR    R1,R6               NUMBER OF COLS LEFT                  00370
         BM    XCARD               COPY CARD IF MINUS                   00371
         EX    R1,FINDNB           FIND OPERAND                         00372
         BC    NOHIT,XCARD         IF NONE OUTPUT CARD                  00373
         LR    R4,R1               COPY START OP OPERAND                00374
         LR    R7,R1               COPY START OF OPERAND                00375
         EJECT                                                          00376
*********************************************************************** 00377
*                                                                     * 00378
*   PROCESS OPERAND INCLUDING QUOTED STRINGS AND CONTINUATIONS        * 00379
*   IF AN 'AIF' IS BEING PROCESSED, COPY ALL OF OPERAND TO PERIOD     * 00380
*   R1 = A(OPERAND)                                                   * 00381
*   R4 = A(OPERAND)                                                   * 00382
*   R5 = A(INPUT CARD)                                                * 00383
*  R7 = A(OPERAND)                                                   *  00384
*  R8 = A(OUTPUT CARD)                                               *  00385
*  R9 = A(OUTPUT OPERAND DESTINATION)                                *  00386
*   THE OPERAND SHOULD OCCUR BEFORE COL 25 - OTHERWISE IT IS          * 00387
*   CONSIDERED COMMENTS.                                              * 00388
*                                                                     * 00389
*********************************************************************** 00390
         LA    R3,24(R5)           COLUMN 25                            00391
         CR    R1,R3               IS OPERAND BEFORE 25                 00392
         BNL   COMLOC0             LO, IT IS NOW A COMMENT              00393
ODLOC2   TM    FLG,AIF             SPECIAL 'AIF' OPERATOR               00394
         BZ    ODLOC3              NO, BRANCH AROUND                    00395
         LA    R3,70(R5)           A(COL 72-1)                          00396
         SR    R3,R1               NUMBER OF COLUMNS TO SCAN            00397
         EX    R3,AIFCHK           SCAN FOR PERIOD                      00398
         BZ    XODMOVE3            NONE FOUND, COPY ALL OF CARD         00399
         NI    FLG,ALLBITS-AIF     RESET AIF FLAG                       00400
         LR    R7,R1               SET NEW BEGINNING FOR SCAN           00401
ODLOC3   LA    R3,70(R5)           A(COL 72-1)                          00402
         SR    R3,R1               NUMBER OF COLS TO SCAN               00403
         BM    XODMOVE3            BRANCH IF NONE TO SCAN               00404
         EX    R3,QBCHECK          FIND A BLANK OR QUOTE                00405
         BZ    XODMOVE3            NEITHER FOUND, COPY CARD             00406
         CLI   0(R1),X'40'         BLANK OR QUOTE FOUND                 00407
         BE    XODMOVE4            BRANCH IF BLANK                      00408
         CLI   1(R1),X'40'         CHECK FOR "' " TYPE USAGE        SEC 00409
         BE    XODMOVE2            YES  - NO MORE CHECKING          SEC 00410
*                                                                   SEC 00411
*       NOW CHECK FOR ATTRIBUTE USAGE                               SEC 00412
*                                                                   SEC 00413
         LR    R7,R1               GET START OF QUOTE               SEC 00414
         BCTR  R7,0                REDUCE BY 1 FOR CHECK            SEC 00415
         CLC   0(2,R7),=C'L'''     IS IT ONLY A LENGTH OPERAND      SEC 00416
         BE    XODMOVE3            YES - DO NOT SET LITERAL FLAG    SEC 00417
         CLC   0(2,R7),=C'K'''     IS IT ONLY A COUNT OPERAND       SEC 00418
         BE    XODMOVE3            YES - DO NOT SET LITERAL FLAG    SEC 00419
         CLC   0(2,R7),=C'I'''     IS IT ONLY A INTERGER OPERAND    SEC 00420
         BE    XODMOVE3            YES - DO NOT SET LITERAL FLAG    SEC 00421
         CLC   0(2,R7),=C'N'''     IS IT ONLY A NUMBER OPERAND      SEC 00422
         BE    XODMOVE3            YES - DO NOT SET LITERAL FLAG    SEC 00423
         CLC   0(2,R7),=C'S'''     IS IT ONLY A SCALING OPERAND     SEC 00424
         BE    XODMOVE3            YES - DO NOT SET LITERAL FLAG    SEC 00425
         CLC   0(2,R7),=C'T'''     IS IT ONLY A TYPE OPERAND        SEC 00426
         BE    XODMOVE3            YES - DO NOT SET LITERAL FLAG    SEC 00427
XODMOVE2 XI    FLG,LC              FLIP LITERAL FLG                     00428
LITCONT  LA    R1,1(R1)            BUMP TO NEXT COLUMN                  00429
         LR    R7,R1               SET NEW START FOR TRT                00430
         B     ODLOC3              BACK TO CONTINUE SCAN                00431
XODMOVE3 LA    R1,71(R5)           SET ENTIRE CARD IF NO HIT            00432
         B     XODMOVE5            SKIP LITERAL TEST                    00433
XODMOVE4 TM    FLG,LC              LITERAL STILL UNFINISHED?            00434
         BO    LITCONT             YES, BACK TO CONTINUE SCAN           00435
XODMOVE5 LR    R7,R4               RESTORE A(OPERAND)                   00436
         EJECT                                                          00437
*********************************************************************** 00438
*                                                                     * 00439
*   R1 POINTS TO THE DELIMITER OF THE OPERAND, DETERMINE IF IT WILL   * 00440
*   FIT IN THE OUTPUT RECORD.                                         * 00441
*   R7 -A(OPERAND)                                                   *  00442
*                                                                     * 00443
*********************************************************************** 00444
         SR    R4,R1                                                    00445
         LCR   R4,R4                                                    00446
         LA    R2,71(,R8)          A(COL 72)                            00447
         SR    R2,R9               NUMBER OF BLANKS AFTER OP            00448
         BNZ   MOVECHK             BRANCH IF 1 OR MORE                  00449
         DC    H'0'                PGM CHECK ************               00450
MOVECHK  EQU   *                                                        00451
         CR    R4,R2               WILL OPERAND FIT                     00452
         BH    ERR4                NO - OUTPUT CARD                     00453
         BCTR  R4,R0               -1                                   00454
         EX    R4,ODMOVE           MOVE OPERAND TO OUTPUT               00455
         EJECT                                                          00456
*********************************************************************** 00457
*                                                                     * 00458
*        PROCESS COMMENTS FIELDS, AND GENERATE NEW COMMENTS CARD      * 00459
*        IF REQUIRED TO CONTINUE COMMENTS DATA.                       * 00460
*                                                                     * 00461
*********************************************************************** 00462
         LA    R9,1(R4,R9)         GET END OF OUTPUT                    00463
         L     R2,COMMSTRT         GET STARTING COMMENTS COL            00464
         BCTR  R2,R0               DECREMENT FOR EXECUTE                00465
         BCTR  R2,R0               ONCE MORE FOR FUDGE                  00466
         AR    R2,R8               2 = OUTPUT COL COMM START            00467
         CR    R9,R2               END BEFORE COMMENT COL?              00468
         BL    SETCOL              BRANCH YES, USE DEFINED VAL          00469
         LA    R9,2(,R9)           NO, BUMP TO USE NEXT                 00470
RESUME   DS    0H                                                       00471
         LR    R7,R1               10 = INPUT END OF OP                 00472
         LA    R4,70(,R5)          4 = INPUT COL 71                     00473
         SR    R4,R1               4 = INPUT NUMBER LEFT TO MOVE        00474
         BM    XCARD               BRANCH IF NONE LEFT                  00475
         EX    R4,FINDNB           FIND INPUT BEGIN'G OF COMMENTS       00476
         BZ    XCARD               BRANCH IF NO COMMENTS                00477
MOVECOM  DS    0H                                                       00478
         LR    R7,R1               10 = INPUT BEGIN'G OF COMMENTS       00479
         LA    R2,70(,R5)          2 = INPUT COL 71                     00480
CHK2     CR    R7,R2               START = STOP COMMENTS                00481
         BNL   SETSIZ              YES, DEFAULT                         00482
         CLI   0(2),C' '           BLANK CHARACTER                      00483
         BNE   SETSIZ              NO, SET SIZE OF INPUT                00484
         BCT   R2,CHK2             GO CHECK PREVIOUS CHAR               00485
SETSIZ   SR    R2,R1               2 = NUMB OF CHARS TO MOVE            00486
         BNM   CHKSUPCD            INSURE RESULT IS POSITIVE            00487
         DC    H'0'                PGM CHECK IF ERROR                   00488
CHKSUPCD EQU   *                   CHECK FOR SUPPORT CODES              00489
         LA    R3,0(R2,R7)         COPY END OF COMMENTS ADDR            00490
         S     R3,=F'8'            DECREMENT BY EIGHT                   00491
         CLI   1(R3),C'@'          SUPPORT CODE EXIST?                  00492
         BNE   MOVEMORE            NO, ALL COMMENTS                     00493
         S     R2,=F'9'            DECREMENT BY NINE FOR MOVE           00494
         MVC   SUPCODE(8),1(R3)    SAVE SUPPORT CODE FOR LATER          00495
         LTR   R2,R2               ANYTHING TO MOVE NOW?                00496
         BNP   XCARD               NO, WRITE OUT RECORD                 00497
MOVEMORE DS    0H                  LABEL                                00498
         L     R4,LIMIT            GET END OF COMMENTS OFFSET           00499
         BCTR  R4,R0               DECREMENT FOR EXECUTE                00500
         AR    R4,R8               4 = OUTPUT COL COMM LIMIT            00501
         SR    R4,R9               4 = OUTPUT COLUMNS LEFT              00502
         NI    FLG,ALLBITS-CR      RESET COMMENT REQ                    00503
         LA    R3,1(R2)            SET INPUT SIZE AS DEFAULT            00504
         CR    R4,R2               CHECK IF INPUT FITS OUTPUT           00505
         BNL   SET                 BRANCH IF NO                         00506
         LR    R3,R4               SET MAX OUTPUT SIZE                  00507
         LA    R15,0(4,R7)         GET INPUT DATA PLUS OFFSET           00508
CHK      CLI   0(R15),C' '         LOOK FOR LAST BLANK                  00509
         BE    SET                 FOUND LAST BLANK                     00510
         BCTR  R15,R0              DECREMENT TO PREVIOUS                00511
         BCT   R3,CHK              DECR. FOR MOVE AND BRANCH            00512
         CH    R4,LIMITSZ          MAX OUTPUT LENGTH                    00513
         BL    AROUND              TRY NEXT CARD IF LOW                 00514
         B     ERR6                ELSE ERROR ASSUMED                   00515
         EJECT                                                          00516
*********************************************************************** 00517
*                                                                     * 00518
*        MOVE COMMENTS TO OUTPUT CARD, AND DETERMINE IF ANOTHER       * 00519
*        COMMENTS CARD WILL BE NEEDED TO CONTINUE COMMENTS.           * 00520
*                                                                     * 00521
*********************************************************************** 00522
SET      DS    0H                                                       00523
         EX    R3,ODMOVE           MOVE DATA TO OUTPUT                  00524
         LA    R3,1(R3)            BUMP FOR EXECUTE                     00525
AROUND   SR    R2,R3               DECREMENT AMOUNT MOVED               00526
         LTR   R2,R2               ANY LEFT TO MOVE                     00527
         BNP   XCARD               NO, GO GENERATE RECORD               00528
         CLI   71(R5),C' '         CONTINUATION CARD                    00529
         BNE   ERR6                YES, CANNOT CONT. COMMENTS           00530
         LA    R9,35(,R8)          SET NEW OUTPUT LOCATION              00531
         LA    R7,0(R3,R7)         UPDATE INPUT RECORD POINTER          00532
         OI    FLG,CR              SET COMMENT CONT REQUEST             00533
         B     XCARD               GO PROCESS THIS CARD                 00534
SETCOL   L     R9,COMMSTRT         GET START OF COMMENTS COL            00535
         BCTR  R9,R0               DECREMENT FOR EXECUTE                00536
         AR    R9,R8               9 = OUTPUT COL COMM START            00537
         B     RESUME              BRANCH TO CONTINUE                   00538
COMLOC0  L     R9,COMMSTRT         GET START OF COMMENTS COL            00539
         BCTR  R9,R0               DECREMENT FOR EXECUTE                00540
         AR    R9,R8               9 = OUTPUT COL COMM START            00541
         B     MOVECOM             BRANCH TO CONTINUE                   00542
XCARD    DS    0H                                                       00543
         CLI   0(R8),C'*'          COMMENTS CARD?                       00544
         BE    SEQNEW              YES, BRANCH TO TEST MORE             00545
         CLC   0(2,R8),=CL2'.*'    MACRO COMMENTS                       00546
         BNE   SEQOLD              NO, USE OLD SEQUENCE                 00547
SEQNEW   TM    FLG,GC              IS THIS COMMENT GENERATED            00548
         BZ    SEQOLD              NO, USE OLD SEQ NUMBER               00549
         MVI   80(R8),C'*'         FLAG ADDED CARD                      00550
         SR    R1,R1               CLEAR FOR COUNT                      00551
         LA    R15,CURRENT+79      FIND END OF CARD                     00552
COUNT    TM    0(R15),X'F0'        FIND NUMERICS                        00553
         BNO   SETNUMB             NON NUMERICS, SET COUNT              00554
         LA    R1,1(R1)            UPDATE COUNT                         00555
         CH    R1,=H'8'            CHECK LIMIT                          00556
         BNL   SETNUMB             BRANCH IF ALL 8 NUMBERICS            00557
         BCT   R15,COUNT           GO CHECK NEXT                        00558
         B     ERR7                ERROR IF FALL THROUGH                00559
         EJECT                                                          00560
*********************************************************************** 00561
*                                                                     * 00562
*        DETERMINE IF POSSIBLE WHAT THE NEXT SEQUENCE NUMBER SHOULD   * 00563
*        BE.  IF ABLE TO, INCREASE THE OLD SEQUENCE NUMBER BY 1.      * 00564
*                                                                     * 00565
*********************************************************************** 00566
SETNUMB  LTR   R10,R1              COPY TO COUNT REG                    00567
         BZ    ERR7                BRANCH IF NO NUMERICS                00568
         LR    R0,R10              SAVE COUNT OF NUMBS                  00569
         BCTR  R10,R0              DECREMENT FOR RUBBER BANDS           00570
         MVC   SEQC(8),ZEROS       CLEAR FOR CONVERT                    00571
         MVC   SEQN(8),ZEROS       CLEAR FOR CONVERT                    00572
         LA    R15,CURRENT+80      GET POINTER TO END OF CARD           00573
         LA    R1,SEQC+8           FIND END OF SEQ                      00574
         SR    R15,R0              BACKUP TO START OF NUMERICS          00575
         SR    R1,R0               DITTO FOR NEXT                       00576
         EX    R10,MOVEC           MOVE CURRENT SEQ TO WORK             00577
         LA    R15,NEXT+80         GET END OF NEXT                      00578
         LA    R1,SEQN+8           GET END OF WORK AREA                 00579
         SR    R15,R0              TO START OF NUMBS                    00580
         SR    R1,R0               DITTO                                00581
         EX    R10,MOVEC           MOVE NEXT SEQ TO WORK                00582
         PACK  WORK(8),SEQC(R5)    PACK FOR CONVERT                     00583
         CVB   R15,WORK            MAKE SEQ NUMB BINARY                 00584
         PACK  WORK(8),SEQN(R5)    PACK FOR CONVERT                     00585
         CVB   R1,WORK             MAKE SEQ NUMB BINARY                 00586
         SR    R1,R15              GET SEQ NUMB DIFFERENCE              00587
         BNP   ERR7                INSURE REMAINDER EXISTS              00588
         C     R1,=F'1'            CAN NEW SEQUENCE BE ADDED?           00589
         BNH   ERR7                CANT ADD, ERROR                      00590
         A     R15,=F'1'           UPDATE BY ONE HUNDRED                00591
         MVC   72(8,R8),CURRENT+72  SET UP NON NUMERICS                 00592
         XC    SEQC(8),SEQC        CLEAR FOR UNPACK                     00593
         CVD   R15,WORK            MAKE DECIMAL AGAIN                   00594
         UNPK  SEQC(8),WORK+3(5)   MAKE PRINTABLE                       00595
         OI    SEQC+7,C'0'         MAKE LAST PRINT TOO                  00596
         LA    R15,SEQC+8          FIND END OF NEW SEQ                  00597
         SR    R15,R0              WHERE TO START MOVE                  00598
         LA    R1,80(R8)           END OF OUTPUT CARD                   00599
         SR    R1,R0               DECREMENT TO NUMERICS START          00600
         EX    R10,MOVEC           MOVE UPDATED SEQ NUMB                00601
         MVC   CURRENT+72(8),72(R8)  UPDATE CURRENT SEQ ALSO            00602
         B     NOCONT              SKIP OLD SEQUENCE RTN                00603
         EJECT                                                          00604
*********************************************************************** 00605
*                                                                     * 00606
*        OUTPUT CARD TO THE NEW FILE, AND DETERMINE IF ANOTHER        * 00607
*        COMMENTS CARD MUST BE GENERATED.  IF SO, RETURN TO           * 00608
*        COMMENTS ROUTINE TO CONTINUE THEM.                           * 00609
*                                                                     * 00610
*********************************************************************** 00611
SEQOLD   MVC   71(9,R8),71(R5)     MOVE CONTIN. AND COMMENTS            00612
         CLI   SUPCODE,C'@'        ANY SUPPORT CODE FOR THIS REC        00613
         BNE   XCARD1              NO, SKIP SUPCODE                     00614
         MVC   63(8,R8),SUPCODE    UPDATE SUPCODE IN REC                00615
XCARD1   EQU   *                                                        00616
         NI    FLG,ALLBITS-CC      RESET CONTINUATION FLAG              00617
         CLI   71(R5),C' '         CONTINUATION CARD                    00618
         BE    TSTLIT2             NO, GO CHECK LITERAL SW              00619
         OI    FLG,CC              SET CONTINUATION FLAG                00620
         B     NOCONT              AROUND LITERAL TESTS                 00621
TSTLIT2  TM    FLG,LC              LITERAL CONTINUATION ON              00622
         BO    ERR5                YES, ERR MESSAGE                     00623
NOCONT   DS    0H                  LABEL                                00624
         PUT   OUTPUT,0(R8)        WRITE NEW CARD                       00625
XCARD15  EQU   *                                                        00626
         BAL   R10,PRINTIT         PRINT OUTPUT IF DESIRES              00627
XCARD2   MVI   0(R8),C' '                                               00628
         MVC   1(125,R8),0(R8)     CLEAR OUTPUT                         00629
         MVI   SUPCODE,0           IN-VALIDATE SUPPORT CODE             00630
         TM    FLG,CR              COMMENT CONT. REQ'D?                 00631
         BZ    GET                 NO, BRANCH TO GET NEXT               00632
         OI    FLG,GC              SET COMMENT CONT. ACTIVE             00633
         MVI   0(R8),C'*'          SET COMMENT CHARACTER                00634
         TM    FLG,SI              SPECIAL OPERATOR                     00635
         BZ    MOVEMORE            NO, NORMAL COMMENTS                  00636
         TM    FLG,MAC             WITHIN A MACRO                       00637
         BZ    MOVEMORE            NO, NORMAL COMMENTS                  00638
         MVC   0(2,R8),=C'.*'      MOVE MACRO COMMENTS DATA             00639
         B     MOVEMORE            GO GET MORE COMMENTS                 00640
         EJECT                                                          00641
*********************************************************************** 00642
*                                                                     * 00643
*        EXECUTED (RUBBER BAND) INSTRUCTIONS AND END OF INPUT ROUTINE * 00644
*                                                                     * 00645
*********************************************************************** 00646
LMOVE    MVC   0(0,R8),0(R7)       MOVE LABEL TO OUTPUT                 00647
ORMOVE   MVC   9(0,R8),0(R7)       MOVE OPERATOR                        00648
FINDB    TRT   0(0,R7),BTABLE      FIND A BLANK                         00649
FINDNB   TRT   0(0,R7),NBTABLE     FIND A NON-BLANK                     00650
LITCHECK TRT   0(0,R7),QTABLE      FIND A QUOTE                         00651
QBCHECK  TRT   0(0,R7),QBTABLE     LOOK FOR QUOTE OR BLANK              00652
AIFCHK   TRT   0(0,R7),PTABLE      LOOK FOR PERIOD (AIF)                00653
ODMOVE   MVC   0(0,R9),0(R7)       MOVE OPERAND                         00654
COMMOVE  MVC   0(0,R9),0(R7)       MOVE COMMENT                         00655
SHIFTL1  MVC   0(0,R7),1(R7)       MOVE TEXT OVER 2ND QUOTE             00656
MACOMP   CLC   0(0,R7),0(R14)      COMPARE FOR MACRO OPERATORS          00657
MVESPACE PACK  WORK,15(0,R8)       MOVE SPACE VALUE TO WORK             00658
CLEARHED XC    0(0,R1),0(R1)       CLEAR HEADING                        00659
MOVEC    MVC   0(1,R1),0(R15)      MOVE CURRENT SEQ                     00660
PARMMOVE MVC   0(1,R14),0(R4)      MOVE PARM TO WORK AREA               00661
EOD      EQU   *                   EOD ON INPUT                         00662
         OI    FLG,EF              SET END OF FILE IND                  00663
         B     ONCEMORE            DO FINAL CARD                        00664
EODAD    CLOSE (INPUT,,OUTPUT,,PRINT)  CLOSE INPUT AND OUTPUTS          00665
EXIT     L     R13,4(R13)                                               00666
         L     R15,RETCODE         GET RETURN CODE                      00667
         L     R14,12(R13)         GET RETURN REG                       00668
         LM    R0,12,20(R13)       RESTORE REGS                         00669
         BR    R14                 RETURN                               00670
*********************************************************************** 00671
*                                                                     * 00672
*        PRINT ROUTINE.  ALL RECORDS WHICH ARE OUTPUTED WILL ALSO     * 00673
*        BE PRINTED.  THE TITLE FOR THE HEADER IS TAKEN FROM THE      * 00674
*        INPUT SOURCE ASSEMBLY FILE IF ONE EXISTS.                    * 00675
*                                                                     * 00676
*********************************************************************** 00677
PRINTIT  EQU   *                   PRINTS OUTPUT                        00678
         CLI   0(R8),C'/'          JCL                                  00679
         BCR   8,R10               RETURN IF SO                         00680
         CLC   9(6,R8),=C'TITLE '  IS THIS A TITLE CARD                 00681
         BNE   PRINTIT1            NO - GO PRINT CARD                   00682
         CLI   15(R8),C''''        HAS TITLE BEEN ALIGNED               00683
         BNE   PRINTIT1            NO - PRINT WITHOUT TITLE             00684
         MVC   HEADING+1(55),16(R8)  MOVE TITLE TO HEADING              00685
         L     R0,=F'1'            QUOTE COUNT                          00686
         LA    R7,HEADING+1        A(HEADING+1)                         00687
         LA    R2,54               MAXIMUMUM LENGTH - 1                 00688
TQ0      EX    R2,LITCHECK         SEEK QUOTE                           00689
         BC    HIT,TQ05                                                 00690
         LA    R1,0(2,R7)          WHERE QUOTE SHOULD BE (COL 71)       00691
         B     TQ1                                                      00692
TQ05     EQU   *                                                        00693
         X     R0,=F'1'            ODD OR EVEN COUNT                    00694
         CLI   1(R1),C''''         DOUBLE QUOTE                         00695
         BE    TQ06                YES                                  00696
         LTR   R0,R0               EVEN NUMBER OF QUOTES                00697
         BZ    TQ1                 YES - EXIT                           00698
TQ06     EQU   *                                                        00699
         X     R0,=F'1'            ODD OR EVEN COUNT                    00700
         LA    R1,1(R1)            POINT TO SECOND QUOTE                00701
         LR    R6,R1                                                    00702
         SR    R1,R7               NUMBER THRU 1ST QUOTE                00703
         SR    R2,R1               NUMBER TO SCAN                       00704
         LR    R7,R6                                                    00705
         EX    R2,SHIFTL1          CLEAR SECOND QUOTE                   00706
         BCT   R2,TQ0              KNOCK 1 OFF AND BRANCH BACK          00707
TQ1      MVI   0(R1),C' '          BLANK TRAILING QUOTE                 00708
         OI    FLG2,X'01'          FORCE NEW PAGE EJECT                 00709
         LA    R7,HEADING+54       A(LAST BYTE OF TITLE)                00710
         SR    R7,R1               FIND NUMBER OF BYTES AFTER           00711
         BNH   PRINTIT1            IF NONE                              00712
         BCTR  R7,R0                                                    00713
         EX    R7,CLEARHED         BLANK HEADING PAST TITLE             00714
         B     PRINTIT1                                                 00715
         EJECT                                                          00716
*********************************************************************** 00717
*                                                                     * 00718
*        PRINT OUTPUT LINE, AND CAUSE OVERFLOW IF END OF PAGE OR      * 00719
*        IF THE EJECT REQUEST BIT HAS BEEN SET.                       * 00720
*                                                                     * 00721
*********************************************************************** 00722
PRINTIT1 EQU   *                   PRINT OUTPUT                         00723
         L     R1,LINES            GET LINE COUNT                       00724
         LTR   R1,R1               NEW PAGE REQUIRED?                   00725
         BZ    NEWPAGE             YES, GENERATE SKIP                   00726
         TM    FLG2,X'01'          EJECT REQUIRED?                      00727
         BNO   NPRINT              NO, NORMAL PRINT                     00728
NEWPAGE  NI    FLG2,ALLBITS-X'01'  RESET EJECT REQUEST                  00729
         PUT   PRINT,HEADING                                            00730
         MVI   CCHAR,C'0'          DOUBLE SPACE AFTER PRINT             00731
         LA    R1,54               SET NEW LINE COUNT                   00732
NPRINT   EQU   *                                                        00733
         BCTR  R1,R0               DECREMENT LINE COUNT                 00734
         ST    R1,LINES            PUT IT BACK FOR LATER                00735
         PUT   PRINT,CCHAR                                              00736
         MVI   CCHAR,C' '                                               00737
         BR    R10                 RETURN                               00738
         EJECT                                                          00739
*********************************************************************** 00740
*                                                                     * 00741
*        ERROR MESSAGE GENERATION ROUTINE.  ALL ERROR MESSAGES        * 00742
*        THAT CAN BE GENERATED WILL BE MOVE WITHIN THIS ROUTINE.      * 00743
*                                                                     * 00744
*********************************************************************** 00745
ERR1     MVC   85(20,R8),ERR1MSG   MOVE MSG TO OUTPUT                   00746
         B     ERRX                                                     00747
ERR2     MVC   85(20,R8),ERR2MSG   MOVE MSG TO OUTPUT                   00748
         B     ERRX                                                     00749
ERR3     MVC   85(20,R8),ERR3MSG   MOVE MSG TO OUTPUT                   00750
         B     ERRX                                                     00751
ERR4     MVC   85(20,R8),ERR4MSG   MOVE MSG TO OUTPUT                   00752
         B     ERRX                                                     00753
ERR5     MVC   85(20,R8),ERR5MSG   MOVE MSG TO OUTPUT                   00754
         B     CPUT                OUPUT CARD AS IS                     00755
ERR6     MVC   85(20,R8),ERR6MSG   MOVE MSG TO OUTPUT                   00756
         B     ERRX                GO TO ERROR COMMON                   00757
ERR7     MVC   85(20,R8),ERR7MSG   MOVE MSG TO OUTPUT                   00758
         MVC   79(1,R8),SEQSAVE    RESTORE SEQ NUMB                     00759
         MVC   NEXT+79(1),SEQSAVE+1  RESTORE SEQ NUMB                   00760
         OI    RETCODE+3,X'04'     SET RETURN CODE                      00761
         NI    FLG,ALLBITS-GC-CR   RESET COMMENTS CONTROL FLAGS         00762
         B     XCARD1              GENERATE NEW COMMENTS CARD           00763
ERR8     MVC   85(20,R8),ERR8MSG   MOVE MSG TO OUTPUT                   00764
         NI    FLG,ALLBITS-LC      RESET LITERAL CONTINUATION           00765
         B     NOCONT              GO OUTPUT CARD                       00766
ERRX     EQU   *                                                        00767
         MVC   0(80,R8),0(R5)      MOVE ORIGINAL CARD TO OUTPUT         00768
         OI    RETCODE+3,X'08'     SET ERROR RETURN CODE                00769
         B     XCARD                                                    00770
         EJECT                                                          00771
*********************************************************************** 00772
*                                                                     * 00773
*        LITERAL POOL AND CONSTANTS AREA.                             * 00774
*                                                                     * 00775
*********************************************************************** 00776
         LTORG                                                          00777
FLG2     DC    X'00'               PRINT OPTION FLAG                    00778
FLG      DC    X'00'                                                    00779
*                                  80 = CONTINUATION CARD               00780
*                                  40 = END OF FILE INDICATOR           00781
*                                  20 = PROCESSING MACRO                00782
*                                  10 = PROCESSING 'AIF' INSTR          00783
*                                  08 = PROCESSING SPECIAL MACRO INSTR  00784
*                                  04 = LITERAL CONTINUATION            00785
*                                  02 = CURRENT RECORD IS COMMENTS CONT 00786
*                                  01 = COMMENTS CONT REQUESTED         00787
WORK     DS    D'0'                                                     00788
SEQC     DS    D                                                        00789
SEQN     DS    D                                                        00790
ZEROS    DC    CL8'00000000'                                            00791
NINES    DC    CL8'99999999'                                            00792
PARMWORK DC    CL8'00000000'                                            00793
SUPCODE  DC    CL8' '                                                   00794
RETCODE  DC    F'0'                                                     00795
LINES    DC    F'0'                                                     00796
PTABLE   DC    75X'00',C'.',180X'00'                                    00797
PAD      DC    F'0'                                                     00798
COMMSTRT DC    F'0'                START OF COMMENTS                    00799
LIMIT    DC    F'0'                END OF COMMENTS                      00800
BTABLE   DC    64X'00',C' ',191X'00'                                    00801
NBTABLE  DC    64X'FF',X'00',191X'FF'                                   00802
QTABLE   DC    125X'00',C'''',130X'00'                                  00803
QBTABLE  DC    XL256'00'           INITIALIZED ON ENTRY                 00804
SEQSAVE  DC    H'0'                SEQ SAVE AREA                        00805
LIMITSZ  DC    H'0'                SIZE OF COMMENTS                     00806
HEADING  DC    C'1'                                                     00807
         DC    CL126' TIDY-ASM MARGINS AND ORGANIZE ASSEMBLER CODE'     00808
CCHAR    DS    CL1                                                      00809
PAREA    DC    CL126' '                                                 00810
ERR1MSG  DC    CL20'LABEL TOO LONG'                                     00811
ERR2MSG  DC    CL20'NO OPERATOR'                                        00812
ERR3MSG  DC    CL20'OPERATOR TOO LONG'                                  00813
ERR4MSG  DC    CL20'NOTE, NOT ALIGNED'                                  00814
ERR5MSG  DC    CL20'-'                                                  00815
ERR6MSG  DC    CL20'COMMENT TOO LONG'                                   00816
ERR7MSG  DC    CL20'SEQUENCING ERROR'                                   00817
ERR8MSG  DC    CL20'UNBALANCED QUOTES'                                  00818
ERR9MSG  DC    CL20'NOTE, COMMENT CONT'                                 00819
         SPACE 2                                                        00820
*********************************************************************** 00821
*                                                                     * 00822
*        SPECIAL OPERATORS TABLE TO HANDLE MACRO AND COPY STATEMENTS  * 00823
*                                                                     * 00824
*********************************************************************** 00825
TSTBL    DC    CL6'AIF'                                                 00826
         DC    CL6'AGO'                                                 00827
         DC    CL6'ANOP'                                                00828
         DC    CL6'GBLA'                                                00829
         DC    CL6'GBLB'                                                00830
         DC    CL6'GBLC'                                                00831
         DC    CL6'LCLA'                                                00832
         DC    CL6'LCLB'                                                00833
         DC    CL6'LCLC'                                                00834
         DC    CL6'ACTR'                                                00835
         DC    CL6'SETA'                                                00836
         DC    CL6'SETB'                                                00837
         DC    CL6'SETC'                                                00838
MEND     DC    CL6'MEND'                                                00839
         DC    CL6'MNOTE'                                               00840
         DC    CL6'MEXIT'                                               00841
         DC    CL6'PRINT'                                               00842
         DC    CL6'PUNCH'                                               00843
         DC    CL6'REPRO'                                               00844
MACRO    DC    CL6'MACRO'                                               00845
         SPACE 2                                                        00846
*********************************************************************** 00847
*                                                                     * 00848
*        DATA CONTROL BLOCKS AND BUFFER AREAS FOR INPUT RECORDS.      * 00849
*                                                                     * 00850
*********************************************************************** 00851
INPUT    DCB   DSORG=PS,MACRF=GM,LRECL=80,EODAD=EOD,DDNAME=SYSIN        00852
OUTPUT   DCB   DSORG=PS,MACRF=PM,LRECL=80,DDNAME=SYSPUNCH               00853
PRINT    DCB   DSORG=PS,MACRF=PM,LRECL=120,RECFM=FA,DDNAME=SYSPRINT,   X00854
               BLKSIZE=120                                              00855
CURRENT  DC    CL80' '                                                  00856
NEXT     DC    81C'9'                                                   00857
         END                                                            00858
