* RESETU - CHANGE USERID IN ISPF STATS OF A PDS MEMBER
*  TO RUN THE PROGRAM:
*   ALLOC FI(RESETU) DA(PDS) SHR
*   CALL *(RESETU) 'MEMBER,USERID'
         SPACE
RESETU   CSECT
         USING *,10
ENTRY0   B     BEGIN-*(,R15)
         DC    AL1(7),CL7'RESETU'
         DC    CL16' &SYSDATE &SYSTIME '
WORKSIZ  DC    0F'0',AL1(0),AL3(WORKLEN)
BEGIN    STM   14,12,12(13)
         LR    R10,R15
         LR    R2,R1               SAVE PARM POINTER
         L     R0,WORKSIZ
         GETMAIN R,LV=(0)
         LR    R9,R1
         USING WORKD,R9
         XC    0(WORKINI,R1),0(R1)
         ST    R13,4(,R9)          OLD ADDRESS IN NEW SAVE AREA
         ST    R9,8(,R13)          NEW ADDRESS IN OLD SAVE AREA
         LR    R13,R9
         LA    R15,12
         ST    R15,RETCODE
         SPACE
         MVC   MEMBER,=CL8' '
         MVI   CHGUSER,X'00'
         L     R1,0(,R2)           POINT TO PARM LEN
         LH    R0,0(,R1)           GET PARM LEN
         LTR   R0,R0
         BZ    PARMERR
         LA    R1,2(,R1)
         LA    R14,MEMBER
         LA    R15,MEMBER+8
         CLI   0(R1),C','          LEADING COMMA?
         BE    PARMERR             YES, ERROR
PRM1     CLI   0(R1),C','          END OF STRING?
         BE    PRM2                YES
         CR    R14,R15             IS DEST FULL?
         BE    PARMERR             YES, STRING TOO LONG
         MVC   0(1,R14),0(R1)      NO, COPY CHAR TO DEST
         LA    R14,1(,R14)
         LA    R1,1(,R1)
         BCT   R0,PRM1
         B     PARMERR             NO COMMA FOUND
PRM2     LA    R1,1(,R1)           POINT PAST COMMA
         LR    R14,R0              COPY LENGTH
         SH    R14,=H'2'           MINUS 1 FOR THE COMMA, 1 FOR EX
         BM    PARMERR             SHORT PARM
         CH    R14,=H'7'           IF MORE THAN 8 AFTER COMMA
         BH    PARMERR              FAIL
         MVC   CHGUSER,=CL8' '     FILL WITH BLANKS
         B     *+10                SKIP MVC
         MVC   CHGUSER(0),0(R1)    EXECUTED BY EX
         EX    R14,*-6             EXECUTE MVC
         TRT   CHGUSER(1),FIRST    IF FIRST CHAR OF USER IS NOT A-Z NAT
         BNZ   EXIT                  FAIL
         LTR   R14,R14             IF USER IS ONLY 1 BYTE
         BZ    PRMX                  DON'T CHECK OTHERS
         BCTR  R14,0               LENGTH MINUS 1
         B     *+10                SKIP TRT
         TRT   CHGUSER+1(0),OTHER  IF OTHER CHARS ARE NOT A-Z NAT 0-9
         EX    R14,*-6             EXECUTE TRT
         BNZ   EXIT                  FAIL
PRMX     EQU   *
         LA    R3,UT1DCBW
         MVC   0(UT1DCBL,R3),UT1DCB
         MVI   OPEN,X'80'
         OPEN  ((R3),UPDAT),MF=(E,OPEN)
         TM    OFLGS(R3),X'10'
         BNO   EXIT
         MVC   LISTNUM(4),=AL2(1,76) 1 ENTRY, LENGTH 8 + 3 + 3 + 62
         MVC   LISTNAME,MEMBER
         BLDL  (R3),LISTNUM
         LTR   R15,R15
         BNZ   BLDLERR
         SR    R0,R0
         IC    R0,LISTC
         N     R0,=F'31'
         C     R0,=F'15'           IS USERDATA LEN 15 HALFWORDS?
         BE    OKSTATS
         C     R0,=F'20'           IS USERDATA LEN 20 HALFWORDS?
         BNE   NOSTATS             IF NO, IT'S NOT EXTENDED STATS
OKSTATS  TM    LISTC,X'60'         ANY TTR'S IN USER DATA
         BNZ   NOSTATS             IF YES, IT'S NOT STATS
         MVC   STOWNAME,LISTNAME
         MVC   STOWTTR,LISTTTR
         MVC   STOWC,LISTC
         MVC   STOWDATA,LISTDATA
         SPACE
         MVC   STOWDATA+20(8),CHGUSER
         STOW  (R3),STOWNAME,R
         LTR   R15,R15
         BNZ   STOWERR
         LA    R1,=C'OK'
         LA    R0,2
         SVC   93 TPUT
         MVI   CLOSE,X'80'
         CLOSE ((R3)),MF=(E,CLOSE)
         B     EXIT0
STOWERR  MVI   CLOSE,X'80'
         CLOSE ((R3)),MF=(E,CLOSE)
         LA    R1,=C'ERR'
         LA    R0,3
         SVC   93 TPUT
         B     EXIT
         SPACE
PARMERR  LA    R1,=C'INVALID PARM - MEMBER,USERID'
         LA    R0,28
         SVC   93 TPUT
         B     EXIT
         SPACE
BLDLERR  LA    R1,=C'MEMBER NOT FOUND'
         LA    R0,16
         SVC   93 TPUT
         B     EXIT
         SPACE
NOSTATS  LA    R1,=C'MEMBER HAS NO ISPF STATS'
         LA    R0,24
         SVC   93 TPUT
         B     EXIT
         SPACE
EXIT0    MVI   RETCODE+3,0
EXIT     L     R2,RETCODE
         LA    R1,=C'ERROR'
         LA    R0,5
         LTR   R2,R2
         BZ    *+6
         SVC   93 TPUT
         LR    R1,R13             POINT TO ADDRESS TO FREEMAIN
         L     R0,WORKSIZ         LENGTH TO FREEMAIN
         L     R13,4(,R13)        RESTORE ORIGINAL R13
         FREEMAIN R,A=(1),LV=(0)
         DROP  R9
         LR    R15,R2
         LM    0,12,20(R13)
         L     R14,12(,R13)
         BR    R14
         SPACE
         LTORG
         DC    0D'0'
FIRST    DC    91X'FF',X'00',31X'FF',2X'00',3X'FF'
         DC    65X'FF',9X'00',7X'FF',9X'00',8X'FF',8X'00',22X'FF'
OTHER    DC    91X'FF',X'00',31X'FF',2X'00',3X'FF'
         DC    65X'FF',9X'00',7X'FF',9X'00',8X'FF',8X'00',6X'FF'
         DC    10X'00',6X'FF'
UT1DCB   DCB   DDNAME=RESETU,DSORG=PO,MACRF=(R)
UT1DCBL  EQU   *-UT1DCB
         DC    0D'0'
WORKD    DSECT
         DS    18F
RETCODE  DS    F
OPEN     DS    F
CLOSE    DS    F
WORKINI  EQU   *-WORKD
UT1DCBW  DS    0F,(UT1DCBL)X
MEMBER   DS    CL8
CHGUSER  DS    CL8
LISTNUM  DS    2H
LISTNAME DS    CL8
LISTTTR  DS    XL3
LISTK    DS    X
LISTZ    DS    X
LISTC    DS    X
LISTDATA DS    XL62
STOWNAME DS    D    ALIGNED, SO STOWDATA WILL BE FW ALIGNED
STOWTTR  DS    XL3
STOWC    DS    X
STOWDATA DS    XL40
         DS    0D
WORKLEN  EQU   *-WORKD
         SPACE
OFLGS    EQU   48                  OFFSET TO DCBOFLGS
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END   ENTRY0
