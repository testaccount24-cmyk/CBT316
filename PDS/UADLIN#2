Subject:  Re: UADLIST failure
From:     Bill
Date:     3/13/2013 7:36 PM
To:       Sam Golob <sbgolob@cbttape.org>

Hi Sam,

I have updated UADLIST (from UADLIST.NEW to READY.ASM) to show
the member name, minus the trailing '0', instead of the userid,
for those cases where the member name does not match the userid
in the record. There is still a "+" after the name to indicate a
mismatch, but if the member name doesn't end with a '0' there
will be a "-' (minus) instead of a '+''. I doubt that that the
logon process (or the ACCOUNT command) even looks at member names
that don't end with a '0'. The logon process probably appends a
'0' to the userid entered on the logon screen, and only looks at
the resulting member name. There are 2 member names that don't
end with '0' - HHHH and TODDBACK, although there is also a HHHH0
member.

(Note: By experimentation, a UADS member not ending in 0 can't be
 logged on to.    SBG)

If you allocate ddname SYSUADS to this UADS dataset that you
provided, and then run the LISTIDS subcommand of ACCOUNT, you'll
see that it ignores the member names that don't end with '0'.

Bill

----- Original Message -----
From: Sam Golob <sbgolob@cbttape.org>
To: Bill
Cc:
Sent: Sunday, March 10, 2013 12:09 AM
Subject: Re: UADLIST failure

Hi Bill,

    I retrofitted my changes into UADLIST and made a new pds
called BILL.UADLIST.NEW with the new source. Please try it
out. Thanks for all your good work.

    All the best of everything to you and your family.

Sincerely,    Sam


On 3/9/2013 9:46 PM, Bill wrote:
Hi Sam,

I have changed the UADLIST program to handle this without
abending. The new source code is in READY.ASM(UADLIST) under my
id.

The problem is that this UADS has a blocksize of 8000, and it
contains some records that originally had a blocksize of 17200,
and were truncated to 8000, losing information in the process.
There should be 215 80-byte records (17200 bytes) but there are
only 100 (8000 bytes). The original blocksize is in the first 2
bytes of each member. The UADSPWD1 field at offset 24 is the
offset to where the password and account information is located,
and the offset is greater than 8000 for some of the members.

What the program now does is check if that offset exceeds the
actual blocksize, and prints other information in the password,
account, and proc fields of the output file.

For example, the first member has this problem, so the output
will now look like this:

BLIN  (+16960)  (*17200)  (=08000)     0000 OPER ACCT JCL CONS

The first number is the offset in the UADSPWD1 field. The second
number is the original block size. The third number is the actual
block size.

I also noticed that several members have a userid in the data
record which does not match the member name. The program has
always printed the userid from the data record, not from the
member name. The program will now put a "+" plus sign after the
userid if it doesn't match the member name.

Bill

----- Original Message -----
From: Sam Golob <sbgolob@cbttape.org>
To:   Bill
Cc:
Sent: Tuesday, March 5, 2013 10:55 AM
Subject: UADLIST failure

Hi Bill,

The following UADS (in XMIT format here) fails UADLIST.  Can you
fix UADLIST so this UADS works?

Thanks much.

It's always a pleasure to write to you.

All the best........

Sam

