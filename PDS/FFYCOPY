         TITLE 'F F Y C O P Y - COPY A FILE USING BSAM'
*--------------------------------------------------------------------*
*                                                                    *
*        THIS IS A PROGRAM USED TO COPY FILES WITH BSAM. IT IS       *
*        MUCH FASTER THAN QSAM OR IEBGENER.                          *
*                                                                    *
* COURTESY:  JIM MARSHALL, CAPT, USAF-RET                            *
*                                                                    *
* WRITTEN: MR FRANK YATES, AEROSPACE CORP WHILE AT MULTIPURPOSE      *
*          FACILITY, LOWRY AFB,CO FOR USE UNDER OS/MVT               *
*                                                                    *
* MODIFIED:  SAM GOLOB                                               *
*                                                                    *
* PURPOSE:   USES BSAM FOR SPEED, BUT LRECL, BLKSIZE, RECFM OF       *
*            THE SOURCE AND TARGET DATASETS MUST MATCH.              *
*            PARM=O (LETTER "O") WILL OVERLAY THE OUTPUT DCB         *
*            ATTRIBUTES FROM THE INPUT DCB ATTRIBUTES.               *
*            (That is how the program worked originally.)            *
*                                                                    *
* DD NAMES:  COPYIN    -  INPUT FILE                                 *
*            COPYOUT   -  OUTPUT FILE                                *
*            SYSPRINT  -  NOW REQUIRED FOR REPORTING                 *
*                                                                    *
* CHANGE                                                             *
*     LOG: MAY 1978-INSTALLED OS/MVS, AIR FORCE DATA SVCS CENTER,    *
*                   WASHINGTON DC,  J. MARSHALL                      *
*          DEC 1981-CLEANED UP CODE.  J.MARSHALL                     *
*          JUN 1991-ADDED DSECTS, ETC  JIM MARSHALL                  *
*          NOV 2014-ADDED SYSPRINT DD TO REPORT FILE ATTRIBUTES      *
*                   OF INPUT AND OUTPUT FILES (BEFORE AND AFTER      *
*                   THE COPY).                                       *
*                   ADDED SAFETY FEATURE TO AVOID OVERLAYING         *
*                   THE OUTPUT FILE'S ATTRIBUTES IF THEY ARE         *
*                   DIFFERENT FROM THE INPUT FILE'S ATTRIBUTES.      *
*                   ADDED CONDITION CODES.     (S.GOLOB)             *
*                   ADDED PARM=O TO OVERLAY OUTPUT DCB ATTRIBUTES    *
*                   WITH THE INPUT DCB ATTRIBUTES.                   *
*                                                                    *
* DOCUMENTATION:  THE "DRIVING ENGINE" FOR THIS FILE COPY PROGRAM    *
*          IS BSAM.  BSAM (AS OPPOSED TO QSAM) DEALS IN BLOCKS OF    *
*          DATA, AS OPPOSED TO INDIVIDUAL RECORDS.  THE REASON FOR   *
*          THE SPEED OF THIS PROGRAM IS THAT IT COPIES THE DATA      *
*          BLOCKS AND DOESN'T CHANGE ANYTHING IN THE OUTPUT FILE     *
*          ATTRIBUTES, SUCH AS RECORD FORMAT (RECFM), BLOCK SIZE     *
*          (BLKSIZE), OR RECORD LENGTH (LRECL).  THEREFORE, THIS     *
*          PROGRAM ONLY WORKS, IF THE OUTPUT FILE ATTRIBUTES         *
*          MATCH THE INPUT FILE ATTRIBUTES.                          *
*                                                                    *
*          THEREFORE, IN THE ORIGINAL DESIGN OF THE PROGRAM, BY      *
*          FRANK YATES, THE OUTPUT FILE'S ATTRIBUTES, NO MATTER      *
*          WHAT THEY WERE, WERE OVERLAID BY THE INPUT FILE'S         *
*          ATTRIBUTES, IN ALL CASES.  WE MIGHT WANT TO BUILD IN      *
*          SOME SAFETY HERE.  SO IN THIS VERSION OF THE PROGRAM,     *
*          WE DO NOT COPY THE INPUT FILE, IF THE EXISTING OUTPUT     *
*          FILE'S ATTRIBUTES ARE DIFFERENT FROM THE INPUT FILE'S     *
*          ATTRIBUTES.  IF ANY OF THE (EXISTING) OUTPUT FILE'S       *
*          ATTRIBUTES (RECFM, LRECL, OR BLKSIZE) ARE DIFFERENT       *
*          FROM THOSE OF THE INPUT FILE, AN ERROR MESSAGE IS         *
*          ISSUED, AND COPYING IS NOT DONE.  ALSO, A CONDITION       *
*          CODE OF 8 IS PRODUCED.                                    *
*                                                                    *
*          SINCE WE MAY COPY FROM A PDS MEMBER TO A SEQUENTIAL       *
*          DATASET, OR VICE-VERSA, WE DON'T CARE IF THE DSORG        *
*          OF THE INPUT AND OUTPUT FILES DON'T MATCH.                *
*                                                                    *
*          IF YOU CODE PARM=O (FOR "OVERLAY OUTPUT ATTRIBUTES")      *
*          THEN THE TEST FOR ATTRIBUTE MATCHES IS BYPASSED, AND      *
*          THE OUTPUT DATASET'S ATTRIBUTES ARE OVERLAID.  THE        *
*          PROGRAM THEN WORKS AS IT DID BEFORE, BUT WE ISSUE A       *
*          CONDITION CODE OF 4 IN THIS CASE.  IF YOU DO NOT LIKE     *
*          THE CONDITION CODE OF 4, CHANGE THE BRANCH TO RET04       *
*          TO A BRANCH TO RET00.                                     *
*                                                                    *
*          A SUGGESTION FOR YOU, IF YOU WANT TO DO A RECORD-BY-      *
*          RECORD COPY:  USE THE CKIEBGEN PROGRAM FROM CBT FILE      *
*          229.  CKIEBGEN WORKS LIKE THIS PROGRAM, BUT IT COPIES     *
*          ONE RECORD AT A TIME (MUCH SLOWER), BUT THEN WE WON'T     *
*          HAVE TO WORRY ABOUT COPYING TO DIFFERENT BLOCK SIZES.     *
*                                                                    *
*--------------------------------------------------------------------*
         MACRO                     Display HEX values.                  01662
&NAME    HEX   &TO,&LEN,&FROM                                           01663
&NAME    DS    0H                                                       01664
         ST    R9,SAV4HEX                                               01665
         STM   R15,R1,HEXSAVE                                           01666
         LA    R1,&FROM                                                 01667
         LA    R0,&LEN                                                  01668
         LA    R15,&TO                                                  01669
         BAL   R9,HEX                                                   01670
         L     R9,SAV4HEX                                               01671
         LM    R15,R1,HEXSAVE                                           01672
         MEND                                                           01673
*--------------------------------------------------------------------*
         YREGS
*R10     EQU   10                  ADDRESSABILITY TO DCB=IN
*R11     EQU   11                  ADDRESSABILITY TO DCB=OUT
         SPACE
FFYCOPY  AMODE 24
FFYCOPY  RMODE 24
FFYCOPY  CSECT
         STM   R14,R12,12(R13)
         LR    R5,R1               Save PARM pointer
         LR    R12,R15
         USING FFYCOPY,R12,R8
         LA    R8,4095(,R12)       Second base.
         LA    R8,1(,R8)
         LR    R15,R13             OLD SAVE AREA ADDRESS
         LA    R13,SAVEAREA        NEW SAVE AREA ADDRESS
         ST    R15,4(,R13)         LINK SAVE AREAS
         ST    R13,8(,R15)         LINK SAVE AREAS
* -------
         LR    R1,R5               Restore PARM pointer
SCAN     DS    0H
         MVI   FLAG4,X'00'
         L     R1,0(,R1)           Point to PARM
         LA    R1,2(,R1)
         OI    0(R1),X'40'         Uppercase
         CLI   0(R1),C'O'          Overlay OUTPUT dataset attributes?
         BNE   NOPARM              No.
         OI    FLAG4,X'01'         Flag overlay.
NOPARM   DS    0H
         OPEN  (SYSPRINT,OUTPUT)
* -------                          Print program header.
         MVC   OUTLINE,OUTLINE-1   ----- ------- ------
         MVC   OUTLINE(L'HEADER),HEADER
         PUT   SYSPRINT,OUTLINE
* -------
         MVC   OUTLINE,OUTLINE-1
         MVC   OUTLINE(133),HEADERJ
         PUT   SYSPRINT,OUTLINE
* -------                          OPEN input and output files.
         OPEN   IN
         RDJFCB IN
         MVC    OUTLINE,OUTLINE-1
         MVC    OUTLINE,MSGDSN
         MVC    OUTLINE+9(3),=C'IN '        COPYIN
         MVC    OUTLINE+64(12),=C'  INPUT  DCB'
         BAL    R9,PRTJFCB           Print available information.

         GETBUF IN,R6              REG 6 = BUFFER A ADDRESS
         GETBUF IN,R7              REG 7 = BUFFER B ADDRESS
         SPACE
         LA     R10,IN             GET ADDR OF IN
         USING  IHADCB,R10         ESTABLISH ADDRESSABILITY
         MVC    RECFM(1),DCBRECFM  SAVE RECFM
         MVC    BLKSIZE(2),DCBBLKSI  SAVE BLKSIZE
         MVC    LRECL(2),DCBLRECL  SAVE LRECL
         DROP   R10
         LA     R11,OUT            GET ADDR OF OUT
         USING  IHADCB,R11         ESTABLISH ADDRESSABILITY
* -------
* ---- >
         OPEN   (OUT,OUTPUT)       Now OPEN output file
         RDJFCB OUT                  for reporting only.
         MVC    OUTLINE,OUTLINE-1
         MVC    OUTLINE(L'MSGDSN),MSGDSN
         MVC    OUTLINE+9(3),=C'OUT'        COPYOUT
         MVC    OUTLINE+64(12),=C'ORIGINAL DCB'
         BAL    R9,PRTJFCB           Print available information.
         CLOSE  OUT
         OPEN   (OUT,OUTPUT)       Now OPEN output file for writing.
* ------------------------------  DIAGNOSTICS BELOW
*        MVC    OUTLINE,OUTLINE-1
*        HEX    OUTLINE+5,1,RECFM
*        HEX    OUTLINE+10,1,DCBRECFM
*        HEX    OUTLINE+20,2,LRECL
*        HEX    OUTLINE+25,2,DCBLRECL
*        HEX    OUTLINE+32,2,BLKSIZE
*        HEX    OUTLINE+37,2,DCBBLKSI
*        PUT    SYSPRINT,OUTLINE
* ------------------------------  DIAGNOSTICS ABOVE
         TM     FLAG4,X'01'        Overlay output dataset attributes?
         BO     OVERLAYA           Yes. Bypass test.
* ----
         BAL    R9,TESTINCM        Test for incompatibilities
         TM     FLAG3,X'E0'        Any?
         BNZ    EODAD              Yes. Get out and do nothing.
* ----
OVERLAYA DS     0H                 Overlay output dataset attributes.
         CLOSE  OUT
         MVC    DCBRECFM,RECFM     COPY RECFM
         MVC    DCBBLKSI,BLKSIZE   COPY BLOCK SIZE
         MVC    DCBLRECL,LRECL     COPY LRECL
         OPEN   (OUT,OUTPUT)       Now OPEN output file for writing.
         RDJFCB OUT
         MVC    OUTLINE,OUTLINE-1  Print its attributes now.
         MVC    OUTLINE,MSGDSN
         MVC    OUTLINE+9(3),=C'OUT'        COPYOUT
         TM     FLAG4,X'01'        Overlay output dataset attributes?
         BO     OVERLAYB
         MVC    OUTLINE+64(12),=C'  FINAL  DCB'
         B      OVERLAYC
OVERLAYB MVC    OUTLINE+64(12),=C'OVERLAID DCB'
OVERLAYC BAL    R9,PRTJFCB           Print available information.
         DROP   R11
* ---- >
         MVI   W,X'7F'            SIMULATE FIRST SUCCESSFUL WRITE.
         B     READ               JUMP INTO LOOP
*
WRITE    WRITE W,SF,OUT,(R6)
READ     READ  R,SF,IN,(R7)
         CHECK W
         CHECK R
         LA    R10,IN             GET ADDR OF IN
         USING IHADCB,R10         ESTABLISH ADDRESSABILITY
         LH    R0,DCBBLKSI        REG 0 = INPUT BLKSIZE
         DROP  R10
         L     R1,R+16            REG 1 = IOB ADDRESS
         SH    R0,14(,R1)         REG 0 = LENGTH OF RECORD
         LA    R11,OUT            GET ADDR OF OUT
         USING IHADCB,R11         ESTABLISH ADDRESSABILITY
         STH   R0,DCBBLKSI        SET OUTPUT BLKSIZE.
         DROP  R11
         STH   R0,W+6             SET OUTPUT RECORD LENGTH.
         LR    R0,R6              SWITCH BUFFERS.
         LR    R6,R7
         LR    R7,R0
         B     WRITE              LOOP
*
EODAD    DS    0H
         LA    R10,IN             GET ADDR OF IN
         USING IHADCB,R10         ESTABLISH ADDRESSABILITY
         MVC   BLKSIZE(2),DCBBLKSI  SAVE BLKSIZE
         DROP  R10
         LA    R11,OUT            GET ADDR OF OUT
         USING IHADCB,R11         ESTABLISH ADDRESSABILITY
         MVC   DCBBLKSI,BLKSIZE   RESTORE BLOCKSIZE
         DROP  R11
         CLOSE SYSPRINT
         CLOSE (OUT,,IN)
         L     R13,4(,R13)        POINT TO PREVIOUS SAVE AREA
         TM    FLAG3,X'E0'        Any problems?
         BNZ   RET08              Yes. RC = 8.
         TM    FLAG4,X'01'        Attributes of output ds overlaid?
         BO    RET04              Then RC = 4.
* ---- >
*                                 Get out, with different codes.
RET00    DS    0H                 RC = 0
         LM    R14,R12,12(R13)
         LA    R15,0
         BR    R14
RET08    DS    0H                 RC = 8
         LM    R14,R12,12(R13)
         LA    R15,8
         BR    R14
RET04    DS    0H                 RC = 4
         LM    R14,R12,12(R13)
         LA    R15,4
         BR    R14
         SPACE
* ------------------------------------------------------------------- *
* -- BELOW -----  SUBROUTINE TO TEST INCOMPATIBILITIES -------------- *
TESTINCM DS    0H
         ST    R9,SAVER9B          Save BAL register.
         LA    R11,OUT             GET ADDR OF OUT
         USING IHADCB,R11          ESTABLISH ADDRESSABILITY
         MVI   FLAG3,X'00'
* ------------------------------------------------------------------- *
TESTBL   DS    0H                  Compare attributes if they match.
         CLC   DCBBLKSI,BLKSIZE    Input and output block sizes same?
         BE    TESTRF              Yes. Skip error message.
         OI    FLAG3,X'80'         Set appropriate flag.
TESTRF   DS    0H
         CLC   DCBRECFM,RECFM      Input and output RECFM's match?
         BE    TESTLR              Yes. Skip error message.
         OI    FLAG3,X'40'         Set appropriate flag.
TESTLR   DS    0H
         CLC   DCBLRECL,LRECL      Input and output LRECL's match?
         BE    TESTEND             Yes. Skip error message.
         OI    FLAG3,X'20'         Set appropriate flag.
TESTEND  DS    0H
         DROP  R11
* ------------------------------------------------------------------- *
ERRBL    DS    0H                          BLKSIZE doesn't match
         TM    FLAG3,X'80'
         BZ    ERRBLE
         MVC   OUTLINE,OUTLINE-1
         MVC   OUTLINE(L'ERRMSBL),ERRMSBL
         PUT   SYSPRINT,OUTLINE
ERRBLE   DS    0H
* ------------------------------------------------------------------- *
ERRRF    DS    0H                            RECFM doesn't match
         TM    FLAG3,X'40'
         BZ    ERRRFE
         MVC   OUTLINE,OUTLINE-1
         MVC   OUTLINE(L'ERRMSRF),ERRMSRF
         PUT   SYSPRINT,OUTLINE
ERRRFE   DS    0H
* ------------------------------------------------------------------- *
ERRLR    DS    0H                            LRECL doesn't match
         TM    FLAG3,X'20'
         BZ    ERRLRE
         MVC   OUTLINE,OUTLINE-1
         MVC   OUTLINE(L'ERRMSLR),ERRMSLR
         PUT   SYSPRINT,OUTLINE
ERRLRE   DS    0H
         L     R9,SAVER9B            Restore BAL register
         BR    R9
* -- ABOVE -----  SUBROUTINE TO TEST INCOMPATIBILITIES  ------------- *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     05098
*                                    Display Hex values.          *     05098
HEX      DS    0H                    Used by the HEX macro.             05099
         ST    R9,SAVER9C
         MVC   1(1,R15),0(R1)        Move byte                          05100
         UNPK  0(3,R15),1(2,R15)     Unpack                             05101
         TR    0(2,R15),HEXTAB-240                                      05102
         LA    R15,2(,R15)           Increment output pointer           05103
         LA    R1,1(,R1)             Increment input pointer            05104
         BCT   R0,HEX                Decrement length, then loop        05105
         MVI   0(R15),C' '           Blank the trailing byte            05106
         L     R9,SAVER9C
         BR    R9                    Return to caller                   05107
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                    05108
SAV4HEX  DS    F
HEXSAVE  DS    3F
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     05098
* -- ABOVE -----  SUBROUTINE TO TEST INCOMPATIBILITIES  ------------- *
* ------------------------------------------------------------------- *
PRTJFCB  DS    0H                    Print DCB attributes for a file.
         ST    R9,SAVER9A
         MVC   OUTLINE+19(44),JFCBDSNM    DSNAME
         PUT   SYSPRINT,OUTLINE
         MVC   OUTLINE,OUTLINE-1
         MVC   OUTLINE,MSGMBR
         MVC   OUTLINE+19(8),JFCBELNM     MEMBER NAME
         PUT   SYSPRINT,OUTLINE
         MVC   OUTLINE,OUTLINE-1
         MVC   OUTLINE,MSGVOLSR           VOLSER
         MVC   OUTLINE+19(6),JFCBVOLS
         MVC   OUTLINE+26(6),JFCBVOLS+6
         MVC   OUTLINE+33(6),JFCBVOLS+12
         MVC   OUTLINE+40(6),JFCBVOLS+18
         MVC   OUTLINE+47(6),JFCBVOLS+24
         PUT   SYSPRINT,OUTLINE
         MVC   OUTLINE,OUTLINE-1
         MVC   OUTLINE,MSGDSORG           DSORG
         MVC   OUTLINE+19(3),=C'IS '
         CLI   JFCDSRG1,JFCORGIS
         BE    PUTDSRG
         MVC   OUTLINE+19(3),=C'ISU'
         CLI   JFCDSRG1,JFCORGIS+JFCORGU
         BE    PUTDSRG
         MVC   OUTLINE+19(3),=C'PS '
         CLI   JFCDSRG1,JFCORGPS
         BE    PUTDSRG
         MVC   OUTLINE+19(3),=C'PSU'
         CLI   JFCDSRG1,JFCORGPS+JFCORGU
         BE    PUTDSRG
         MVC   OUTLINE+19(3),=C'DA '
         CLI   JFCDSRG1,JFCORGDA
         BE    PUTDSRG
         MVC   OUTLINE+19(3),=C'DAU'
         CLI   JFCDSRG1,JFCORGDA+JFCORGU
         BE    PUTDSRG
         MVC   OUTLINE+19(3),=C'PO '
         CLI   JFCDSRG1,JFCORGPO
         BE    PUTDSRG
         MVC   OUTLINE+19(3),=C'POU'
         CLI   JFCDSRG1,JFCORGPO+JFCORGU
         BE    PUTDSRG
         OI    FLAG1,X'01'                FLAG DSORG MISSING
         MVC   OUTLINE+19(15),=C'MISSING OR VSAM'
PUTDSRG  PUT   SYSPRINT,OUTLINE
RECFMX   DS    0H
         MVC   OUTLINE,OUTLINE-1
         MVC   OUTLINE,MSGRECFM           RECFM
         LA    R4,OUTLINE+19
         TM    JFCRECFM,JFCUND
         BNO   NOTUND
         MVI   0(R4),C'U'
         OI    FLAG2,X'01'                FLAG RECFM=U
         A     R4,ONE
         B     CHKB
NOTUND   TM    JFCRECFM,JFCFIX
         BNO   NOTFIX
         MVI   0(R4),C'F'
         A     R4,ONE
NOTFIX   TM    JFCRECFM,JFCVAR
         BNO   CHKB
         MVI   0(R4),C'V'
         A     R4,ONE
CHKB     TM    JFCRECFM,JFCRFB
         BNO   NOTBLK
         MVI   0(R4),C'B'
         A     R4,ONE
NOTBLK   TM    JFCRECFM,JFCRFS
         BNO   NOTSCN
         MVI   0(R4),C'S'
         A     R4,ONE
NOTSCN   TM    JFCRECFM,JFCASA
         BNO   NOTASA
         MVI   0(R4),C'A'
         A     R4,ONE
NOTASA   TM    JFCRECFM,JFCMAC
         BNO   PUTRCFM
         MVI   0(R4),C'M'
PUTRCFM  PUT   SYSPRINT,OUTLINE
LRECLX   DS    0H
         MVC   OUTLINE,OUTLINE-1
         MVC   OUTLINE,MSGLRECL
         SR    R4,R4
         LH    R4,JFCLRECL
         C     R4,=F'0'
         BNE   LRECPRT
         TM    FLAG2,X'01'                IS RECFM=U?
         BO    LRECPRT                    YES-0 IS LEGITIMATE
         OI    FLAG1,X'04'
         MVC   OUTLINE+19(7),=C'MISSING'
         B     LRECPUT
LRECPRT  DS    0H
         CVD   R4,DECVALUE
         MVC   OUTLINE+19(12),EDPAT       LRECL
         ED    OUTLINE+19(12),DECVALUE+3
LRECPUT  PUT   SYSPRINT,OUTLINE
BLKSIZEX MVC   OUTLINE,OUTLINE-1
         MVC   OUTLINE,MSGBLKSZ
         SR    R4,R4
         LH    R4,JFCBLKSI
         C     R4,=F'0'
         BNE   BLKSIZEG                   BLOCK SIZE IS GOOD
         OI    FLAG1,X'02'                FLAG BLKSIZE MISSING
         MVC   OUTLINE+19(15),=C'ZERO OR MISSING'
         B     BLKSZPUT
BLKSIZEG CVD   R4,DECVALUE
         MVC   OUTLINE+19(12),EDPAT       BLKSIZE
         ED    OUTLINE+19(12),DECVALUE+3
BLKSZPUT PUT   SYSPRINT,OUTLINE
         L     R9,SAVER9A
         BR    R9
* -- ABOVE ---------------  SUBROUTINE TO PRINT JFCB INFORMATION ---- *
*--------------------------------------------------------------------*
*        DATA AREA FOLLOWS
*--------------------------------------------------------------------*
HEADER   DC    CL133'1  FFYCOPY - SEQUENTIAL COPY PROGRAM USING BSAM'
         DC    CL133' '
HEADERJ  DC    CL133'-   JFCB REPORT OF DATASET CHARACTERISTICS '
         DC    CL133' '
MSGDSN   DC    CL133'-    COPYXXX DSN ='
         DC    CL133' '
MSGVOLSR DC    CL133'         VOLSER  ='
         DC    CL133' '
MSGMBR   DC    CL133'         MEMBER  ='
         DC    CL133' '
MSGDSORG DC    CL133'         DSORG   ='
         DC    CL133' '
MSGBLKSZ DC    CL133'         BLKSIZE ='
         DC    CL133' '
MSGLRECL DC    CL133'         LRECL   ='
         DC    CL133' '
MSGRECFM DC    CL133'         RECFM   ='
         DC    CL133' '
MSG01    DC    CL133'-    RECORDS  IN ='
         DC    CL133' '
MSG02    DC    CL133'     RECORDS OUT ='
         DC    CL133' '
MSG03    DC    CL133'     SKIPPED     ='
         DC    CL133' '
MSG04    DC    CL133'     COPIED      ='
         DC    CL133' '
ABENDMSG DC    CL133'-   JFCB IS MISSING VALUES - CORRECT YOUR JCL '
         DC    C' '
BLANKS   DC    CL133' '
         DC    C' '
OUTLINE  DC    CL133' '
ONE      DC    F'1'
DECVALUE DS    CL8
EDPAT    DC    X'402020206B2020206B202120'
ERRMSBL DC C'-OUTPUT BLKSIZE NOT EQUAL TO INPUT BLKSIZE - COPY ABORTED'
ERRMSLR DC C'-OUTPUT  LRECL  NOT EQUAL TO INPUT  LRECL  - COPY ABORTED'
ERRMSRF DC C'-OUTPUT  RECFM  NOT EQUAL TO INPUT  RECFM  - COPY ABORTED'
IN       DCB   DSORG=PS,MACRF=R,BUFNO=2,EODAD=EODAD,DDNAME=COPYIN,     X
               EXLST=JFCB1
OUT      DCB   DSORG=PS,MACRF=W,DDNAME=COPYOUT,EXLST=JFCB1
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA
SAVER9A  DS    F
SAVER9B  DS    F
SAVER9C  DS    F
SAVEAREA DC    18F'0'
RECFM    DS    X                   RECORD FORMAT
LRECL    DS    XL2                 LOGICAL RECORD LENGTH
BLKSIZE  DS    XL2                 BLOCKSIZE
RECFM2   DS    X                   RECORD FORMAT
LRECL2   DS    XL2                 LOGICAL RECORD LENGTH
BLKSIZE2 DS    XL2                 BLOCKSIZE
FLAG1    DC    X'00'
*              X'01'               DSORG IS MISSING
FLAG2    DC    X'00'
FLAG3    DS    X
FLAG4    DS    X
         DS    0F
JFCB1    DC    X'87'
         DC    AL3(INFMJFCB)
         IEFJFCBN LIST=YES
         LTORG
         DCBD  DSORG=(PS)
         END
